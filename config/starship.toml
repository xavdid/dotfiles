# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

add_newline = false

format = '${custom.directory}${custom.directory-basic} $all'

[hg_branch]
disabled = true

[docker_context]
disabled = true

[cmd_duration]
disabled = true

[golang]
format = 'go@[($version)](bold cyan) '

[character]
success_symbol = "[%](bold white)"
error_symbol = "[%](bold red)"

[directory]
# replaced by a custom script
disabled = true
style = "bold purple"
# match so that repo_root_format gets used
repo_root_style = "bold purple"
repo_root_format = '[$repo_root]($repo_root_style)[$path](bold cyan) '
home_symbol = "üè† ~"

[git_branch]
format = '\[[$branch(:$remote_branch)]($style)\] '
style = 'bold green'

[line_break]
# disabled = true

[python]
format = '[(\($virtualenv\) )]($style)${symbol} '

[ruby]
disabled = true

[nodejs]
# don't use $style because it still needs a check for whether the current version is compatible
# see: https://github.com/starship/starship/issues/3809#issuecomment-2798706868
format = '[$symbol](bold green)'

[sudo]
disabled = false

[package]
# the little box doesn't do much for me
disabled = true
# remove `is`
format = '[$symbol]($style) '

# replace the build-in directory module
# see: https://github.com/starship/starship/issues/4199
[custom.directory]
when = true
command = "CLICOLOR_FORCE=1 ~/bin/truncated-directory"
description = "custom calculation to get truncated path"
format = "$output"                                       # remove any other coloring

[custom.directory-basic]
when = """ test ! -f ~/bin/truncated-directory """
command = "pwd"
format = "\\(fallback\\) $output"
description = "fallback for when a compiled truncated-git-path is unavailable. Compile xavdid/truncated-directory to remove"

[elixir]
# naming the actual version is slow
format = '$symbol '

[bun]
# don't care about the version
format = '$symbol '

[swift]
# naming the actual version is slow
format = '$symbol '

[direnv]
disabled = true
# this is noisy but could be nice if I spent some time on the formatting
detect_files = [".envrc", ".env"]
